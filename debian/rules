#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

%:
	dh $@

override_dh_install:
	cp -r "$(CURDIR)/db/"  "$(CURDIR)/dns/"  "$(CURDIR)/http/" "$(CURDIR)/aegir.make" "$(CURDIR)/platform/" "$(CURDIR)/Provision/" "$(CURDIR)/Symfony/" "$(CURDIR)"/*.inc "$(CURDIR)"/*.php "$(CURDIR)"/*.info "$(CURDIR)/debian/aegir-provision/usr/share/drush/commands/provision/"

	# We need this nasty hack, because we added a directory.
	# TODO: this is really lame, there must be a better way to do this?
	if [ -d "$(CURDIR)/tests" ]; then cp -r "$(CURDIR)/tests/" "$(CURDIR)/debian/aegir-provision/usr/share/drush/commands/provision/"; fi

	cp "$(CURDIR)/debian/aegir-provision.lintian" "$(CURDIR)/debian/aegir-provision/usr/share/lintian/overrides/aegir-provision"

override_dh_install_init:
	dh_installinit --name=hosting-queued

DOMAIN?=$(shell hostname -f)
KEY?="-kjenkins@$(DOMAIN)"

# this builds a debian package based on what the current branches are
# this usually tests the latest release
jenkins-build-official:
	git-buildpackage -b --git-upstream-branch=origin/upstream --git-debian-branch=origin/debian --git-ignore-branch -kjenkins@ci.aegirproject.org

version=2.0~$(shell git log -n 1 --oneline | sed 's/ .*$$//')

# this builds a debian package but first updates the branches to follow the latest 2.x branch
# this assumes you are on a "debian" branch (of course)
jenkins-build-auto:
	dch -D unstable -v ${version} "automatic jenkins build ${BUILD_TAG}"
	git commit -m"dummy commit for jenkins ${BUILD_TAG} autobuild" debian/changelog
	git-buildpackage -b ${KEY}

show-version:
	@echo ${version}
